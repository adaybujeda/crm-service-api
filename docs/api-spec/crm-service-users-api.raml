#%RAML 1.0
title: CRM Users API
baseUri: http://localhost:8080
version: 1.0
mediaType: application/json
traits:
  unauthorized-error: !include unauthorized-error.raml
  invalid-request-error: !include invalid-error.raml
  duplicated-error: !include duplicated-error.raml
  deleted-error: !include deleted-error.raml
  not-found-error: !include not-found-error.raml
  stale-entity-error: !include stale-entity-error.raml
  authorized:
    description: Request authorization mechanism
    headers:
      Authorization:
        required: true

/crm/users:
    description: Collection resource for the User entity
    is: [authorized, unauthorized-error]
    get:
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                            "items": [
                                {
                                    "userId": "fd383951-ff29-4eb2-ad64-9d1b22270d7e",
                                    "name": "John Smith",
                                    "username": "jsmith",
                                    "role": "admin"
                                },
                                {...}
                            ]}
    post:
        is: [invalid-request-error, duplicated-error]
        body:
            application/json:
                 example: |
                    {
                        "name": "John Smith",
                        "username": "jsmith",
                        "password": "some-password",
                        "role": "admin"
                    }
        responses:
            201:
                headers:
                    ETag:
                       description: The user version number for optimistic locking on update
                    Location:
                       description: The URL tp get the user
                body:
                    application/json:
                        example: |
                            {
                                "userId": "fd383951-ff29-4eb2-ad64-9d1b22270d7e",
                            }
    /{userId}:
        description: Resource for individual User operations
        is: [authorized, unauthorized-error, invalid-request-error, not-found-error]
        get:
            responses:
                200:
                    headers:
                        ETag:
                            description: The user version number for optimistic locking on update
                    body:
                        example: |
                            {
                                "userId": "fd383951-ff29-4eb2-ad64-9d1b22270d7e",
                                "name": "John Smith",
                                "username": "jsmith",
                                "role": "user"
                            }
        put:
            is: [stale-entity-error, duplicated-error, deleted-error]
            headers:
                If-Match:
                    description: The user version number returned in the GET call.
            body:
                example: |
                    {
                        "name": "John Smith",
                        "username": "jsmith",
                        "password": "some-password",
                        "role": "admin"
                    }
            responses:
                204:
        patch:
            description: To make a user and admin or to remove admin privileges to a user.
            is: [stale-entity-error, deleted-error]
            headers:
                If-Match:
                    description: The user version number returned in the GET call.
            body:
                example: {"role": "admin"}
            responses:
                204:
        delete:
            responses:
                204: